import os
import json
import logging
from aiogram import Bot, types
from config import SMS_DISABLED_CHATS_FILE, SPECIAL_CHAT_ID

# ‚úÖ –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ —Å –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã–º–∏ —Å–º—Å
def load_sms_disabled_chats():
    global sms_disabled_chats
    if os.path.exists(SMS_DISABLED_CHATS_FILE):
        try:
            with open(SMS_DISABLED_CHATS_FILE, "r", encoding="utf-8") as file:
                sms_disabled_chats = set(json.load(file))
                logging.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(sms_disabled_chats)} —á–∞—Ç–æ–≤ —Å –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã–º–∏ —Å–º—Å.")
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã—Ö —Å–º—Å: {e}")
            sms_disabled_chats = set()
    else:
        sms_disabled_chats = set()

# ‚úÖ –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ —Å –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã–º–∏ —Å–º—Å
def save_sms_disabled_chats():
    try:
        with open(SMS_DISABLED_CHATS_FILE, "w", encoding="utf-8") as file:
            json.dump(list(sms_disabled_chats), file, ensure_ascii=False, indent=4)
        logging.info("–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ —Å –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã–º–∏ —Å–º—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã—Ö —Å–º—Å: {e}")

# ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
load_sms_disabled_chats()

# –í—ã–Ω–µ—Å–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –°–ú–°
async def process_disable_sms(chat_id, user_id, bot):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º –∏–ª–∏ —Å—É–ø–µ—Ä—é–∑–µ—Ä–æ–º
    chat_member = await bot.get_chat_member(chat_id, user_id)
    is_admin = chat_member.status in ["administrator", "creator"]
    is_superuser = user_id == 126386976  # üëë –ù–∞—à —Å—É–ø–µ—Ä—é–∑–µ—Ä
    
    if not (is_admin or is_superuser):
        return "–¢—ã –Ω–µ –∞–¥–º–∏–Ω –∏ –Ω–µ –±–æ–≥, –∏–¥–∏ –Ω–∞—Ö—É–π."
    
    if chat_id in sms_disabled_chats:
        return "–°–ú–° –∏ –ú–ú–° —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ."
    else:
        sms_disabled_chats.add(chat_id)
        save_sms_disabled_chats()
        return "–¢–µ–ø–µ—Ä—å —è –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é –∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é —Å–º—Å –∏ –º–º—Å –≤ —ç—Ç–æ–º —á–∞—Ç–µ."

# –í—ã–Ω–µ—Å–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –°–ú–°
async def process_enable_sms(chat_id, user_id, bot):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    chat_member = await bot.get_chat_member(chat_id, user_id)
    if chat_member.status not in ["administrator", "creator"]:
        return "–¢—ã –Ω–µ –∞–¥–º–∏–Ω, –∏–¥–∏ –Ω–∞—Ö—É–π."
    
    if chat_id in sms_disabled_chats:
        sms_disabled_chats.remove(chat_id)
        save_sms_disabled_chats()
        return "–¢–µ–ø–µ—Ä—å —è —Å–Ω–æ–≤–∞ –ø—Ä–∏–Ω–∏–º–∞—é –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é —Å–º—Å –∏ –º–º—Å –≤ —ç—Ç–æ–º —á–∞—Ç–µ."
    else:
        return "–°–ú–° –∏ –ú–ú–° —É–∂–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ."

# –í—ã–Ω–µ—Å–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –°–ú–°
async def process_send_sms(message, chat_list, bot, sms_disabled_chats):
    chat_id = str(message.chat.id)
    is_reply = message.reply_to_message is not None  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ —Ä–µ–ø–ª–∞–π –∏–ª–∏ –Ω–µ—Ç
    parts = message.text.split(maxsplit=2)  # –†–∞–∑–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
    
    if len(parts) < 2 and not is_reply:
        await message.reply("—ç—ç—ç –¥–∞–ª–±–∞–µ–±: —Å–º—Å <–Ω–æ–º–µ—Ä —á–∞—Ç–∞> <—Ç–µ–∫—Å—Ç>")
        return
    
    try:
        chat_index = int(parts[1]) - 1
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º —á–∞—Ç—ã –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è (–≥–¥–µ title == None)
        filtered_chats = [chat for chat in chat_list if chat.get("title")]
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —á–∞—Ç—ã –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞
        filtered_chats.sort(key=lambda chat: 0 if chat["id"] == SPECIAL_CHAT_ID else 1)
        
        if chat_index < 0 or chat_index >= len(filtered_chats):
            await message.reply("–ß–∞—Ç —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏–¥–∏ –Ω–∞—Ö—É–π")
            return
            
        target_chat_id = str(filtered_chats[chat_index]["id"])
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫–ª—é—á–µ–Ω—ã –ª–∏ –°–ú–° –≤ —Ü–µ–ª–µ–≤–æ–º —á–∞—Ç–µ
        if target_chat_id in sms_disabled_chats:
            await message.reply("–≠—Ç–æ—Ç —á–∞—Ç –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –°–ú–°.")
            return
            
        source_chat_title = message.chat.title or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
        # –ù–∞—Ö–æ–¥–∏–º –Ω–æ–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —á–∞—Ç–∞ –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ
        source_chat_number = next((i+1 for i, chat in enumerate(filtered_chats) if str(chat["id"]) == chat_id), "‚ùì")
        
        if is_reply:
            original_text = message.reply_to_message.text or message.reply_to_message.caption or "(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)"
            formatted_message = f'–í–∞–º –ø–µ—Å—å–º–æ –∏–∑ —á–∞—Ç–∞ "{source_chat_title}" (–ß–∞—Ç #{source_chat_number}):\n\n{original_text}'
            await bot.send_message(target_chat_id, formatted_message)
            await message.reply(f"–ü–µ—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {filtered_chats[chat_index]['title']}!")
            return
            
        text_message = parts[2] if len(parts) > 2 else "(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)"
        formatted_message = f'–í–∞–º –ø–µ—Å—å–º–æ –∏–∑ —á–∞—Ç–∞ "{source_chat_title}" (–ß–∞—Ç #{source_chat_number}):\n\n{text_message}'
        await bot.send_message(target_chat_id, formatted_message)
        await message.reply(f"–ü–µ—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {filtered_chats[chat_index]['title']}!")
        
    except ValueError:
        await message.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –¥—É—Ä–∞—á–æ–∫. –ò—Å–ø–æ–ª—å–∑—É–π: —Å–º—Å <–Ω–æ–º–µ—Ä —á–∞—Ç–∞> <—Ç–µ–∫—Å—Ç>")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç: {e}")
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, —è —Ö—É–∏—Å–æ—Å")

# –í—ã–Ω–µ—Å–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ú–ú–°
async def process_send_mms(message, chat_list_param, bot, sms_disabled_chats):
    chat_list = chat_list_param  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤–º–µ—Å—Ç–æ global
    chat_id = str(message.chat.id)

    is_reply = message.reply_to_message is not None

    command_text = message.text or message.caption  
    parts = command_text.split(maxsplit=2)  

    if len(parts) < 2 and not is_reply:
        await message.reply("—ç—ç—ç –¥–∞–ª–±–∞–µ–±: –º–º—Å <–Ω–æ–º–µ—Ä —á–∞—Ç–∞> (–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª)")
        return

    try:
        chat_index = int(parts[1]) - 1
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º —á–∞—Ç—ã –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è (–≥–¥–µ title == None)
        filtered_chats = [chat for chat in chat_list if chat.get("title")]
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —á–∞—Ç—ã –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞
        filtered_chats.sort(key=lambda chat: 0 if chat["id"] == SPECIAL_CHAT_ID else 1)
        
        if chat_index < 0 or chat_index >= len(filtered_chats):
            await message.reply("–ß–∞—Ç —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏–¥–∏ –Ω–∞—Ö—É–π")
            return

        target_chat_id = str(filtered_chats[chat_index]["id"])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫–ª—é—á–µ–Ω—ã –ª–∏ –ú–ú–° –≤ —Ü–µ–ª–µ–≤–æ–º —á–∞—Ç–µ
        if target_chat_id in sms_disabled_chats:
            await message.reply("–≠—Ç–æ—Ç —á–∞—Ç –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ú–ú–°.")
            return

        source_chat_title = message.chat.title or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
        # –ù–∞—Ö–æ–¥–∏–º –Ω–æ–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —á–∞—Ç–∞ –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ
        source_chat_number = next((i+1 for i, chat in enumerate(filtered_chats) if str(chat["id"]) == chat_id), "‚ùì")
        user_text = parts[2] if len(parts) > 2 else ""  
        caption = f'–í–∞–º –∞—Ç–∫—Ä—ã—Ç–∫–∞ –∏–∑ —á–∞—Ç–∞ "{source_chat_title}" (–ß–∞—Ç #{source_chat_number}):\n\n{user_text}'

        media = None

        # ‚úÖ –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–ø–ª–∞–π –Ω–∞ –º–µ–¥–∏–∞, –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –µ–≥–æ
        if is_reply and message.reply_to_message:
            if message.reply_to_message.photo:
                media = message.reply_to_message.photo[-1].file_id
                await bot.send_photo(target_chat_id, media, caption=caption)

            elif message.reply_to_message.video:
                media = message.reply_to_message.video.file_id
                await bot.send_video(target_chat_id, media, caption=caption)

            elif message.reply_to_message.animation:
                media = message.reply_to_message.animation.file_id
                await bot.send_animation(target_chat_id, media, caption=caption)

            elif message.reply_to_message.audio:
                media = message.reply_to_message.audio.file_id
                await bot.send_audio(target_chat_id, media, caption=caption)

            elif message.reply_to_message.voice:
                media = message.reply_to_message.voice.file_id
                await bot.send_voice(target_chat_id, media, caption=caption)

            elif message.reply_to_message.document:
                media = message.reply_to_message.document.file_id
                await bot.send_document(target_chat_id, media, caption=caption)

            elif message.reply_to_message.sticker:
                media = message.reply_to_message.sticker.file_id
                await bot.send_sticker(target_chat_id, media)

            elif message.reply_to_message.poll:
                poll = message.reply_to_message.poll
                await bot.send_poll(
                    chat_id=target_chat_id,
                    question=poll.question,
                    options=[option.text for option in poll.options],
                    type='quiz' if poll.type == 'quiz' else 'regular',
                    correct_option_id=poll.correct_option_id if poll.type == 'quiz' else None,
                    explanation=poll.explanation,
                    is_anonymous=False  # –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä
                )

            await message.reply(f"–ê—Ç–∫—Ä—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ —á–∞—Ç {chat_list[chat_index]['title']}!")
            return

        # ‚úÖ –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ "–º–º—Å", –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞
        if message.photo:
            media = message.photo[-1].file_id
            await bot.send_photo(target_chat_id, media, caption=caption)

        elif message.video:
            media = message.video.file_id
            await bot.send_video(target_chat_id, media, caption=caption)

        elif message.animation:
            media = message.animation.file_id
            await bot.send_animation(target_chat_id, media, caption=caption)

        elif message.audio:
            media = message.audio.file_id
            await bot.send_audio(target_chat_id, media, caption=caption)

        elif message.voice:
            media = message.voice.file_id
            await bot.send_voice(target_chat_id, media, caption=caption)

        elif message.document:
            media = message.document.file_id
            await bot.send_document(target_chat_id, media, caption=caption)

        elif message.sticker:
            media = message.sticker.file_id
            await bot.send_sticker(target_chat_id, media)

        if media:
            await message.reply(f"–ê—Ç–∫—Ä—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ —á–∞—Ç {filtered_chats[chat_index]['title']}!")
        else:
            await message.reply("–û—à–∏–±–∫–∞ –±–ª—è–¥—å: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–¥–∏–∞.")

    except ValueError:
        await message.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –¥—É—Ä–∞—á–æ–∫. –ò—Å–ø–æ–ª—å–∑—É–π: –º–º—Å <–Ω–æ–º–µ—Ä —á–∞—Ç–∞> (–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª)")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞—Ç–∫—Ä—ã—Ç–∫–∏ –≤ —á–∞—Ç: {e}")
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–¥–∏–∞. –í–æ–∑–º–æ–∂–Ω–æ, —è —Ö—É–∏—Å–æ—Å")
