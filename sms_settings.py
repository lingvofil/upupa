import os
import json
import logging
from aiogram import Bot, types
# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç `sms_disabled_chats` –∏–∑ config.py
from config import SMS_DISABLED_CHATS_FILE, SPECIAL_CHAT_ID, sms_disabled_chats

# ‚úÖ –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ —Å –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã–º–∏ —Å–º—Å
def load_sms_disabled_chats():
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç —á–∞—Ç—ã —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ –°–ú–° –∏–∑ —Ñ–∞–π–ª–∞.
    –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ `sms_disabled_chats` –Ω–∞ –º–µ—Å—Ç–µ, —á—Ç–æ–±—ã –≤—Å–µ –º–æ–¥—É–ª–∏ –≤–∏–¥–µ–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è.
    """
    if os.path.exists(SMS_DISABLED_CHATS_FILE):
        try:
            with open(SMS_DISABLED_CHATS_FILE, "r", encoding="utf-8") as file:
                data = json.load(file)
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑ —Ñ–∞–π–ª–∞ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –∏–º–µ–Ω–Ω–æ —Å–ø–∏—Å–æ–∫
                if isinstance(data, list):
                    # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û—á–∏—â–∞–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—ä–µ–∫—Ç, –∞ –Ω–µ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
                    sms_disabled_chats.clear()
                    sms_disabled_chats.update(data)
                    logging.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(sms_disabled_chats)} —á–∞—Ç–æ–≤ —Å –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã–º–∏ —Å–º—Å.")
                else:
                    sms_disabled_chats.clear()
                    logging.warning(f"–§–∞–π–ª {SMS_DISABLED_CHATS_FILE} —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ —Å–ø–∏—Å–æ–∫, –∞ {type(data)}. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã.")
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã—Ö —Å–º—Å: {e}")
            sms_disabled_chats.clear()
    else:
        # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—É—Å—Ç–æ–µ
        sms_disabled_chats.clear()

# ‚úÖ –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ —Å –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã–º–∏ —Å–º—Å
def save_sms_disabled_chats():
    try:
        with open(SMS_DISABLED_CHATS_FILE, "w", encoding="utf-8") as file:
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ JSON
            json.dump(list(sms_disabled_chats), file, ensure_ascii=False, indent=4)
        logging.info("–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ —Å –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã–º–∏ —Å–º—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã—Ö —Å–º—Å: {e}")

# ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
load_sms_disabled_chats()

# –í—ã–Ω–µ—Å–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –°–ú–°
async def process_disable_sms(chat_id, user_id, bot):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º –∏–ª–∏ —Å—É–ø–µ—Ä—é–∑–µ—Ä–æ–º
    chat_member = await bot.get_chat_member(chat_id, user_id)
    is_admin = chat_member.status in ["administrator", "creator"]
    is_superuser = user_id == 126386976  # üëë –ù–∞—à —Å—É–ø–µ—Ä—é–∑–µ—Ä
    
    if not (is_admin or is_superuser):
        return "–¢—ã –Ω–µ –∞–¥–º–∏–Ω –∏ –Ω–µ –±–æ–≥, –∏–¥–∏ –Ω–∞—Ö—É–π."
    
    chat_id_str = str(chat_id)
    if chat_id_str in sms_disabled_chats:
        return "–°–ú–° –∏ –ú–ú–° —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ."
    else:
        sms_disabled_chats.add(chat_id_str)
        save_sms_disabled_chats()
        return "–¢–µ–ø–µ—Ä—å —è –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é –∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é —Å–º—Å –∏ –º–º—Å –≤ —ç—Ç–æ–º —á–∞—Ç–µ."

# –í—ã–Ω–µ—Å–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –°–ú–°
async def process_enable_sms(chat_id, user_id, bot):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    chat_member = await bot.get_chat_member(chat_id, user_id)
    if chat_member.status not in ["administrator", "creator"]:
        return "–¢—ã –Ω–µ –∞–¥–º–∏–Ω, –∏–¥–∏ –Ω–∞—Ö—É–π."
    
    chat_id_str = str(chat_id)
    if chat_id_str in sms_disabled_chats:
        sms_disabled_chats.remove(chat_id_str)
        save_sms_disabled_chats()
        return "–¢–µ–ø–µ—Ä—å —è —Å–Ω–æ–≤–∞ –ø—Ä–∏–Ω–∏–º–∞—é –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é —Å–º—Å –∏ –º–º—Å –≤ —ç—Ç–æ–º —á–∞—Ç–µ."
    else:
        return "–°–ú–° –∏ –ú–ú–° —É–∂–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ."

# üî¥ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –û–¢–ü–†–ê–í–ö–ò –°–ú–°
async def process_send_sms(message: types.Message, chat_list: list, bot: Bot):
    chat_id = str(message.chat.id)
    is_reply = message.reply_to_message is not None
    
    # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 1: –ß–∏—Ç–∞–µ–º –∫–æ–º–∞–Ω–¥—É –∏–∑ .text –∏–ª–∏ .caption, –∫–∞–∫ –≤ –ú–ú–°
    command_text = message.text or message.caption
    if not command_text:
        # –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–æ—Ç–∞–ª –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ caption
        logging.warning("process_send_sms –≤—ã–∑–≤–∞–Ω –±–µ–∑ command_text")
        return
        
    parts = command_text.split(maxsplit=2)  # –†–∞–∑–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
    
    text_message = None # –¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏

    # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 2: –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Ç–µ–∫—Å—Ç –≤ —Å–∞–º–æ–π –∫–æ–º–∞–Ω–¥–µ (parts[2])
    if len(parts) > 2:
        text_message = parts[2]
    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ –Ω–µ—Ç, –ò —ç—Ç–æ —Ä–µ–ø–ª–∞–π, –±–µ—Ä–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Ä–µ–ø–ª–∞—è
    elif is_reply:
        text_message = message.reply_to_message.text or message.reply_to_message.caption or "(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)"
    
    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç–∞ –≤—Å–µ –µ—â–µ –Ω–µ—Ç (—Ç.–µ. –Ω–µ —Ä–µ–ø–ª–∞–π –ò –Ω–µ—Ç parts[2])
    if text_message is None:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É–∫–∞–∑–∞–Ω —Ö–æ—Ç—è –±—ã –Ω–æ–º–µ—Ä —á–∞—Ç–∞
        if len(parts) < 2:
            await message.reply("—ç—ç—ç –¥–∞–ª–±–∞–µ–±: —Å–º—Å <–Ω–æ–º–µ—Ä —á–∞—Ç–∞> <—Ç–µ–∫—Å—Ç> (–∏–ª–∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)")
            return
        else:
            # –°–ª—É—á–∞–π "—Å–º—Å <–Ω–æ–º–µ—Ä>" –±–µ–∑ —Ä–µ–ø–ª–∞—è –∏ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞
            text_message = "(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)"
            
    # --- –¢–µ–ø–µ—Ä—å –æ—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ ---
    
    try:
        # –ù–æ–º–µ—Ä —á–∞—Ç–∞ —Ç–µ–ø–µ—Ä—å –≤—Å–µ–≥–¥–∞ –≤ parts[1]
        if len(parts) < 2:
            # –≠—Ç–æ—Ç —Å–ª—É—á–∞–π –¥–æ–ª–∂–µ–Ω –±—ã–ª –æ—Ç—Å–µ—á—å—Å—è –≤—ã—à–µ, –Ω–æ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
            await message.reply("—ç—ç—ç –¥–∞–ª–±–∞–µ–±: —Å–º—Å <–Ω–æ–º–µ—Ä —á–∞—Ç–∞> <—Ç–µ–∫—Å—Ç>")
            return
            
        chat_index = int(parts[1]) - 1
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º —á–∞—Ç—ã –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è (–≥–¥–µ title == None)
        filtered_chats = [chat for chat in chat_list if chat.get("title")]
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —á–∞—Ç—ã –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞
        filtered_chats.sort(key=lambda chat: 0 if chat["id"] == SPECIAL_CHAT_ID else 1)
        
        if chat_index < 0 or chat_index >= len(filtered_chats):
            await message.reply("–ß–∞—Ç —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏–¥–∏ –Ω–∞—Ö—É–π")
            return
            
        target_chat_id = str(filtered_chats[chat_index]["id"])
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫–ª—é—á–µ–Ω—ã –ª–∏ –°–ú–° –≤ —Ü–µ–ª–µ–≤–æ–º —á–∞—Ç–µ
        if target_chat_id in sms_disabled_chats:
            await message.reply("–≠—Ç–æ—Ç —á–∞—Ç –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –°–ú–°.")
            return
            
        source_chat_title = message.chat.title or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
        # –ù–∞—Ö–æ–¥–∏–º –Ω–æ–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —á–∞—Ç–∞ –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ
        source_chat_number = next((i + 1 for i, chat in enumerate(filtered_chats) if str(chat["id"]) == chat_id), "‚ùì")
        
        # –°—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞ —Å "if is_reply:" –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞,
        # —Ç–∞–∫ –∫–∞–∫ text_message —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤—ã—à–µ
        
        formatted_message = f'–í–∞–º –ø–µ—Å—å–º–æ –∏–∑ —á–∞—Ç–∞ "{source_chat_title}" (–ß–∞—Ç #{source_chat_number}):\n\n{text_message}'
        await bot.send_message(target_chat_id, formatted_message)
        await message.reply(f"–ü–µ—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {filtered_chats[chat_index]['title']}!")
        
    except ValueError:
        await message.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –¥—É—Ä–∞—á–æ–∫. –ò—Å–ø–æ–ª—å–∑—É–π: —Å–º—Å <–Ω–æ–º–µ—Ä —á–∞—Ç–∞> <—Ç–µ–∫—Å—Ç>")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç: {e}")
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, —è —Ö—É–∏—Å–æ—Å")

# –í—ã–Ω–µ—Å–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ú–ú–° (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –∫–∞–∫ –≤ –≤–∞—à–µ–º —Ñ–∞–π–ª–µ)
async def process_send_mms(message: types.Message, chat_list_param: list, bot: Bot):
    chat_list = chat_list_param  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤–º–µ—Å—Ç–æ global
    chat_id = str(message.chat.id)

    is_reply = message.reply_to_message is not None

    command_text = message.text or message.caption  
    parts = command_text.split(maxsplit=2)  

    if len(parts) < 2 and not is_reply:
        await message.reply("—ç—ç—ç –¥–∞–ª–±–∞–µ–±: –º–º—Å <–Ω–æ–º–µ—Ä —á–∞—Ç–∞> (–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª)")
        return

    try:
        chat_index = int(parts[1]) - 1
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º —á–∞—Ç—ã –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è (–≥–¥–µ title == None)
        filtered_chats = [chat for chat in chat_list if chat.get("title")]
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —á–∞—Ç—ã –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞
        filtered_chats.sort(key=lambda chat: 0 if chat["id"] == SPECIAL_CHAT_ID else 1)
        
        if chat_index < 0 or chat_index >= len(filtered_chats):
            await message.reply("–ß–∞—Ç —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏–¥–∏ –Ω–∞—Ö—É–π")
            return

        target_chat_id = str(filtered_chats[chat_index]["id"])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫–ª—é—á–µ–Ω—ã –ª–∏ –ú–ú–° –≤ —Ü–µ–ª–µ–≤–æ–º —á–∞—Ç–µ
        if target_chat_id in sms_disabled_chats:
            await message.reply("–≠—Ç–æ—Ç —á–∞—Ç –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ú–ú–°.")
            return

        source_chat_title = message.chat.title or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
        # –ù–∞—Ö–æ–¥–∏–º –Ω–æ–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —á–∞—Ç–∞ –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ
        source_chat_number = next((i + 1 for i, chat in enumerate(filtered_chats) if str(chat["id"]) == chat_id), "‚ùì")
        user_text = parts[2] if len(parts) > 2 else ""  
        caption = f'–í–∞–º –∞—Ç–∫—Ä—ã—Ç–∫–∞ –∏–∑ —á–∞—Ç–∞ "{source_chat_title}" (–ß–∞—Ç #{source_chat_number}):\n\n{user_text}'

        media = None

        message_to_forward = message.reply_to_message if is_reply else message

        if message_to_forward.photo:
            media = message_to_forward.photo[-1].file_id
            await bot.send_photo(target_chat_id, media, caption=caption)
        elif message_to_forward.video:
            media = message_to_forward.video.file_id
            await bot.send_video(target_chat_id, media, caption=caption)
        elif message_to_forward.animation:
            media = message_to_forward.animation.file_id
            await bot.send_animation(target_chat_id, media, caption=caption)
        elif message_to_forward.audio:
            media = message_to_forward.audio.file_id
            await bot.send_audio(target_chat_id, media, caption=caption)
        elif message_to_forward.voice:
            media = message_to_forward.voice.file_id
            await bot.send_voice(target_chat_id, media, caption=caption)
        elif message_to_forward.document:
            media = message_to_forward.document.file_id
            await bot.send_document(target_chat_id, media, caption=caption)
        elif message_to_forward.sticker:
            media = message_to_forward.sticker.file_id
            await bot.send_sticker(target_chat_id, media)
        elif message_to_forward.poll:
            poll = message_to_forward.poll
            await bot.send_poll(
                chat_id=target_chat_id,
                question=poll.question,
                options=[option.text for option in poll.options],
                type='quiz' if poll.type == 'quiz' else 'regular',
                correct_option_id=poll.correct_option_id if poll.type == 'quiz' else None,
                explanation=poll.explanation,
                is_anonymous=poll.is_anonymous,
                allows_multiple_answers=poll.allows_multiple_answers
            )
            media = "poll" # To indicate success

        if media:
            await message.reply(f"–ê—Ç–∫—Ä—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ —á–∞—Ç {filtered_chats[chat_index]['title']}!")
        else:
            await message.reply("–û—à–∏–±–∫–∞ –±–ª—è–¥—å: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–µ–¥–∏–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")

    except ValueError:
        await message.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –¥—É—Ä–∞—á–æ–∫. –ò—Å–ø–æ–ª—å–∑—É–π: –º–º—Å <–Ω–æ–º–µ—Ä —á–∞—Ç–∞> (–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª)")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞—Ç–∫—Ä—ã—Ç–∫–∏ –≤ —á–∞—Ç: {e}")
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–¥–∏–∞. –í–æ–∑–º–æ–∂–Ω–æ, —è —Ö—É–∏—Å–æ—Å")

